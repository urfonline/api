# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2020-01-06 18:06
from __future__ import unicode_literals

import api.core.utils
import api.shows.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shows', '0009_auto_20200106_1736'),
    ]

    operations = [
        migrations.CreateModel(
            name='ShowApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('name', models.CharField(help_text='Name of the show', max_length=80, verbose_name='Show Name')),
                ('contact_email', models.EmailField()),
                ('short_description', models.CharField(help_text='A tiny one-sentence tag line for the show', max_length=90, verbose_name='Short description')),
                ('long_description', models.TextField(help_text='A long description for your show', verbose_name='Long description')),
                ('cover', models.ImageField(blank=True, height_field='cover_height', null=True, upload_to=api.shows.models.upload_to_show_cover, width_field='cover_width')),
                ('cover_width', models.IntegerField(blank=True, null=True)),
                ('cover_height', models.IntegerField(blank=True, null=True)),
                ('banner', models.ImageField(blank=True, height_field='banner_height', null=True, upload_to=api.shows.models.upload_to_show_banner, width_field='banner_width')),
                ('banner_width', models.IntegerField(blank=True, null=True)),
                ('banner_height', models.IntegerField(blank=True, null=True)),
                ('brand_color', models.CharField(help_text='Color hex for show branding', max_length=6, validators=[api.core.utils.validate_hex], verbose_name='Branding color')),
                ('emoji_description', models.CharField(help_text='Describe the show in a single emoji', max_length=4, verbose_name='Emoji')),
                ('social_facebook_url', models.URLField(blank=True, null=True, verbose_name='Facebook URL')),
                ('social_twitter_handle', models.CharField(blank=True, max_length=35, null=True, verbose_name='Twitter handle')),
                ('social_mixcloud_handle', models.CharField(blank=True, max_length=35, null=True, verbose_name='Mixcloud handle')),
                ('social_snapchat_handle', models.CharField(blank=True, max_length=35, null=True, verbose_name='Snapchat handle')),
                ('social_soundcloud_handle', models.CharField(blank=True, max_length=35, null=True, verbose_name='Soundcloud handle')),
                ('social_instagram_handle', models.CharField(blank=True, max_length=35, null=True, verbose_name='Instagram handle')),
                ('social_youtube_url', models.URLField(blank=True, null=True, verbose_name='YouTube URL')),
            ],
            options={
                'verbose_name': 'Show Application',
                'verbose_name_plural': 'Show Applications',
            },
        ),
        migrations.CreateModel(
            name='TimeSlotRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('hour', models.IntegerField(choices=[(0, '00:00'), (8, '08:00'), (9, '09:00'), (10, '10:00'), (11, '11:00'), (12, '12:00'), (13, '13:00'), (14, '14:00'), (15, '15:00'), (16, '16:00'), (17, '17:00'), (18, '18:00'), (19, '19:00'), (20, '20:00'), (21, '21:00'), (22, '22:00'), (23, '23:00')])),
            ],
            options={
                'verbose_name': 'Time Slot Request',
                'verbose_name_plural': 'Time Slot Requests',
            },
        ),
        migrations.AddField(
            model_name='showapplication',
            name='assigned_slot',
            field=models.OneToOneField(blank=True, help_text="Exec's slot choice for this application", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accepted_application', to='applications.TimeSlotRequest', verbose_name='Assigned Slot'),
        ),
        migrations.AddField(
            model_name='showapplication',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='show_applications', to='shows.ShowCategory'),
        ),
        migrations.AddField(
            model_name='showapplication',
            name='first_slot_choice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='first_choice_applications', to='applications.TimeSlotRequest', verbose_name='First Slot Choice'),
        ),
        migrations.AddField(
            model_name='showapplication',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='show_applications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='showapplication',
            name='second_slot_choice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='second_choice_applications', to='applications.TimeSlotRequest', verbose_name='Second Slot Choice'),
        ),
        migrations.AddField(
            model_name='showapplication',
            name='third_slot_choice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='third_choice_applications', to='applications.TimeSlotRequest', verbose_name='Third Slot Choice'),
        ),
    ]
